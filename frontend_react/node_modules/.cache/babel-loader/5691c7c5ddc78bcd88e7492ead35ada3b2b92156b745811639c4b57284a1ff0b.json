{"ast":null,"code":"var _jsxFileName = \"/Users/georgeballard/code/fast-api-mongodb/frontend/src/HcpPage/components/HcpTable.js\";\nimport React from \"react\";\nimport { Table, Row, Input, Space } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst columns = [{\n  title: \"ID\",\n  dataIndex: \"id\",\n  key: \"id\"\n}, {\n  title: \"Name\",\n  dataIndex: \"name\",\n  key: \"name\"\n}, {\n  title: \"Status\",\n  dataIndex: \"status\",\n  key: \"status\"\n}, {\n  title: \"Address\",\n  dataIndex: \"address_link\",\n  key: \"address\",\n  render: record => {\n    return record.map(item => /*#__PURE__*/_jsxDEV(Row, {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 35\n    }, this));\n  }\n  // render: (record) => {\n  //   return (\n  //     <>\n  //       <Row>{record[\"addr1\"]}</Row>\n  //       <Row>{record[\"city\"]}</Row>\n  //     </>\n  //   );\n  // },\n}, {\n  title: \"Country Code\",\n  dataIndex: \"countryIsoCode\",\n  key: \"countryCode\"\n}];\nconst HcpTable = ({\n  data,\n  loading,\n  onSelectRow,\n  searchValue,\n  onSearch\n}) => /*#__PURE__*/_jsxDEV(Space, {\n  direction: \"vertical\",\n  style: {\n    width: \"80%\"\n  },\n  children: [/*#__PURE__*/_jsxDEV(Search, {\n    allowClear: true,\n    defaultValue: searchValue,\n    placeholder: \"Search by HCP name\",\n    onSearch: value => onSearch(value),\n    style: {\n      width: 300,\n      marginTop: 20\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Table, {\n    loading: loading,\n    columns: columns,\n    dataSource: data,\n    title: () => \"Health Care Providers\",\n    onRow: record => {\n      return {\n        onClick: () => {\n          onSelectRow(record);\n        }\n      };\n    },\n    rowKey: \"id\",\n    bordered: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this);\n_c = HcpTable;\nexport default HcpTable;\nvar _c;\n$RefreshReg$(_c, \"HcpTable\");","map":{"version":3,"names":["React","Table","Row","Input","Space","jsxDEV","_jsxDEV","Search","columns","title","dataIndex","key","render","record","map","item","children","fileName","_jsxFileName","lineNumber","columnNumber","HcpTable","data","loading","onSelectRow","searchValue","onSearch","direction","style","width","allowClear","defaultValue","placeholder","value","marginTop","dataSource","onRow","onClick","rowKey","bordered","_c","$RefreshReg$"],"sources":["/Users/georgeballard/code/fast-api-mongodb/frontend/src/HcpPage/components/HcpTable.js"],"sourcesContent":["import React from \"react\";\nimport { Table, Row, Input, Space } from \"antd\";\nconst { Search } = Input;\n\nconst columns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address_link\",\n    key: \"address\",\n    render: (record) => {\n      return record.map((item) => <Row>{item}</Row>);\n    },\n    // render: (record) => {\n    //   return (\n    //     <>\n    //       <Row>{record[\"addr1\"]}</Row>\n    //       <Row>{record[\"city\"]}</Row>\n    //     </>\n    //   );\n    // },\n  },\n  {\n    title: \"Country Code\",\n    dataIndex: \"countryIsoCode\",\n    key: \"countryCode\",\n  },\n];\n\nconst HcpTable = ({ data, loading, onSelectRow, searchValue, onSearch }) => (\n  <Space direction=\"vertical\" style={{ width: \"80%\" }}>\n    <Search\n      allowClear\n      defaultValue={searchValue}\n      placeholder=\"Search by HCP name\"\n      onSearch={(value) => onSearch(value)}\n      style={{\n        width: 300,\n        marginTop: 20,\n      }}\n    />\n    <Table\n      loading={loading}\n      columns={columns}\n      dataSource={data}\n      title={() => \"Health Care Providers\"}\n      onRow={(record) => {\n        return {\n          onClick: () => {\n            onSelectRow(record);\n          },\n        };\n      }}\n      rowKey=\"id\"\n      bordered\n    />\n  </Space>\n);\n\nexport default HcpTable;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,MAAM;EAAEC;AAAO,CAAC,GAAGJ,KAAK;AAExB,MAAMK,OAAO,GAAG,CACd;EACEC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,GAAG,EAAE;AACP,CAAC,EACD;EACEF,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE,MAAM;EACjBC,GAAG,EAAE;AACP,CAAC,EACD;EACEF,KAAK,EAAE,QAAQ;EACfC,SAAS,EAAE,QAAQ;EACnBC,GAAG,EAAE;AACP,CAAC,EACD;EACEF,KAAK,EAAE,SAAS;EAChBC,SAAS,EAAE,cAAc;EACzBC,GAAG,EAAE,SAAS;EACdC,MAAM,EAAGC,MAAM,IAAK;IAClB,OAAOA,MAAM,CAACC,GAAG,CAAEC,IAAI,iBAAKT,OAAA,CAACJ,GAAG;MAAAc,QAAA,EAAED;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC;EAChD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,EACD;EACEX,KAAK,EAAE,cAAc;EACrBC,SAAS,EAAE,gBAAgB;EAC3BC,GAAG,EAAE;AACP,CAAC,CACF;AAED,MAAMU,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,WAAW;EAAEC,WAAW;EAAEC;AAAS,CAAC,kBACrEpB,OAAA,CAACF,KAAK;EAACuB,SAAS,EAAC,UAAU;EAACC,KAAK,EAAE;IAAEC,KAAK,EAAE;EAAM,CAAE;EAAAb,QAAA,gBAClDV,OAAA,CAACC,MAAM;IACLuB,UAAU;IACVC,YAAY,EAAEN,WAAY;IAC1BO,WAAW,EAAC,oBAAoB;IAChCN,QAAQ,EAAGO,KAAK,IAAKP,QAAQ,CAACO,KAAK,CAAE;IACrCL,KAAK,EAAE;MACLC,KAAK,EAAE,GAAG;MACVK,SAAS,EAAE;IACb;EAAE;IAAAjB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,eACFd,OAAA,CAACL,KAAK;IACJsB,OAAO,EAAEA,OAAQ;IACjBf,OAAO,EAAEA,OAAQ;IACjB2B,UAAU,EAAEb,IAAK;IACjBb,KAAK,EAAEA,CAAA,KAAM,uBAAwB;IACrC2B,KAAK,EAAGvB,MAAM,IAAK;MACjB,OAAO;QACLwB,OAAO,EAAEA,CAAA,KAAM;UACbb,WAAW,CAACX,MAAM,CAAC;QACrB;MACF,CAAC;IACH,CAAE;IACFyB,MAAM,EAAC,IAAI;IACXC,QAAQ;EAAA;IAAAtB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACG,CACR;AAACoB,EAAA,GA5BInB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}