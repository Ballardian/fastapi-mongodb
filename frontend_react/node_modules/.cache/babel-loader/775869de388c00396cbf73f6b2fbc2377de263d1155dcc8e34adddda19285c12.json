{"ast":null,"code":"var _jsxFileName = \"/Users/georgeballard/code/fast-api-mongodb/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Flex } from \"antd\";\nimport HcpTable from \"./components/HcpTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [hcpData, setHcpData] = useState(null);\n  const [selectedTableRow, setSelectedTableRow] = useState(null);\n  useEffect(() => {\n    fetchHcps();\n  }, []);\n  const fetchHcps = async () => {\n    try {\n      // TODO abstract to api file\n      const response = await axios.get(\"http://localhost:8000/hcps/\");\n      // TODO why await this?\n      const data = response.data.hcps;\n      // console.log(\"DATA\", data);\n      setHcpData(data);\n    } catch {\n      // TODO show message\n      // Send to Sentry etc\n    }\n  };\n  const handleSelectedTableRowChange = async selectedRecord => {\n    try {\n      // TODO add try catch with message\n      const recordId = selectedRecord === null || selectedRecord === void 0 ? void 0 : selectedRecord.id;\n      // TODO abstract to api file\n      const response = await axios.get(`http://localhost:8000/hcps/${recordId}`);\n      // TODO why await this?\n      const data = response === null || response === void 0 ? void 0 : response.data;\n      setSelectedTableRow(data);\n    } catch {\n      // TODO show message\n      // Send to Sentry etc\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(HcpTable, {\n      data: hcpData,\n      onSelectRow: handleSelectedTableRowChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7zwqK889I0PZOl3dt0CONCbRYHU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Flex","HcpTable","jsxDEV","_jsxDEV","App","_s","hcpData","setHcpData","selectedTableRow","setSelectedTableRow","fetchHcps","response","get","data","hcps","handleSelectedTableRowChange","selectedRecord","recordId","id","justify","children","onSelectRow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/georgeballard/code/fast-api-mongodb/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Flex } from \"antd\";\nimport HcpTable from \"./components/HcpTable\";\n\nconst App = () => {\n  const [hcpData, setHcpData] = useState(null);\n  const [selectedTableRow, setSelectedTableRow] = useState(null);\n\n  useEffect(() => {\n    fetchHcps();\n  }, []);\n\n  const fetchHcps = async () => {\n    try {\n      // TODO abstract to api file\n      const response = await axios.get(\"http://localhost:8000/hcps/\");\n      // TODO why await this?\n      const data = response.data.hcps;\n      // console.log(\"DATA\", data);\n      setHcpData(data);\n    } catch {\n      // TODO show message\n      // Send to Sentry etc\n    }\n  };\n\n  const handleSelectedTableRowChange = async (selectedRecord) => {\n    try {\n      // TODO add try catch with message\n      const recordId = selectedRecord?.id;\n      // TODO abstract to api file\n      const response = await axios.get(\n        `http://localhost:8000/hcps/${recordId}`\n      );\n      // TODO why await this?\n      const data = response?.data;\n      setSelectedTableRow(data);\n    } catch {\n      // TODO show message\n      // Send to Sentry etc\n    }\n  };\n\n  return (\n    <Flex justify=\"center\">\n      <HcpTable data={hcpData} onSelectRow={handleSelectedTableRowChange} />\n    </Flex>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,6BAA6B,CAAC;MAC/D;MACA,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACC,IAAI;MAC/B;MACAP,UAAU,CAACM,IAAI,CAAC;IAClB,CAAC,CAAC,MAAM;MACN;MACA;IAAA;EAEJ,CAAC;EAED,MAAME,4BAA4B,GAAG,MAAOC,cAAc,IAAK;IAC7D,IAAI;MACF;MACA,MAAMC,QAAQ,GAAGD,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEE,EAAE;MACnC;MACA,MAAMP,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC9B,8BAA8BK,QAAQ,EACxC,CAAC;MACD;MACA,MAAMJ,IAAI,GAAGF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;MAC3BJ,mBAAmB,CAACI,IAAI,CAAC;IAC3B,CAAC,CAAC,MAAM;MACN;MACA;IAAA;EAEJ,CAAC;EAED,oBACEV,OAAA,CAACH,IAAI;IAACmB,OAAO,EAAC,QAAQ;IAAAC,QAAA,eACpBjB,OAAA,CAACF,QAAQ;MAACY,IAAI,EAAEP,OAAQ;MAACe,WAAW,EAAEN;IAA6B;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEX,CAAC;AAACpB,EAAA,CA5CID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}