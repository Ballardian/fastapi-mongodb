{"ast":null,"code":"var _jsxFileName = \"/Users/georgeballard/code/fast-api-mongodb/frontend/src/HcpPage/index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Flex } from \"antd\";\nimport HcpTable from \"./components/HcpTable\";\nimport HcpDetailDrawer from \"./components/HcpDetailDrawer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HcpPage = () => {\n  _s();\n  const [hcpData, setHcpData] = useState(null);\n  const [selectedTableRow, setSelectedTableRow] = useState(null);\n  useEffect(() => {\n    fetchHcps();\n  }, []);\n  const fetchHcps = async searchValue => {\n    try {\n      // TODO abstract to api file\n      const requestData = {\n        search: searchValue === null || searchValue === void 0 ? void 0 : searchValue.toString()\n      };\n      const response = await axios.get(\"http://localhost:8000/api/hcps/\", {\n        params: requestData\n      });\n      const data = response.data.hcps;\n      setHcpData(data);\n    } catch (error) {\n      // TODO show message to user\n      // Send to Sentry etc\n      console.log(\"error\", error);\n    }\n  };\n  const handleSelectedTableRowChange = async selectedRecord => {\n    try {\n      const recordId = selectedRecord === null || selectedRecord === void 0 ? void 0 : selectedRecord.id;\n      // TODO abstract to api file\n      const response = await axios.get(`http://localhost:8000/api/hcps/${recordId}`);\n      const data = response === null || response === void 0 ? void 0 : response.data;\n      setSelectedTableRow(data);\n    } catch (error) {\n      // TODO show message to user\n      // Send to Sentry etc\n      console.log(\"error\", error);\n    }\n  };\n  const handleDrawerClose = () => {\n    setSelectedTableRow(null);\n  };\n  const handleSearchChange = value => {\n    fetchHcps(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(HcpTable, {\n      data: hcpData,\n      onSelectRow: handleSelectedTableRowChange,\n      onSearch: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), selectedTableRow && /*#__PURE__*/_jsxDEV(HcpDetailDrawer, {\n      data: selectedTableRow,\n      onClose: handleDrawerClose,\n      open: selectedTableRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(HcpPage, \"7zwqK889I0PZOl3dt0CONCbRYHU=\");\n_c = HcpPage;\nexport default HcpPage;\nvar _c;\n$RefreshReg$(_c, \"HcpPage\");","map":{"version":3,"names":["useState","useEffect","axios","Flex","HcpTable","HcpDetailDrawer","jsxDEV","_jsxDEV","HcpPage","_s","hcpData","setHcpData","selectedTableRow","setSelectedTableRow","fetchHcps","searchValue","requestData","search","toString","response","get","params","data","hcps","error","console","log","handleSelectedTableRowChange","selectedRecord","recordId","id","handleDrawerClose","handleSearchChange","value","justify","children","onSelectRow","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onClose","open","_c","$RefreshReg$"],"sources":["/Users/georgeballard/code/fast-api-mongodb/frontend/src/HcpPage/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Flex } from \"antd\";\nimport HcpTable from \"./components/HcpTable\";\nimport HcpDetailDrawer from \"./components/HcpDetailDrawer\";\n\nconst HcpPage = () => {\n  const [hcpData, setHcpData] = useState(null);\n  const [selectedTableRow, setSelectedTableRow] = useState(null);\n\n  useEffect(() => {\n    fetchHcps();\n  }, []);\n\n  const fetchHcps = async (searchValue) => {\n    try {\n      // TODO abstract to api file\n      const requestData = {\n        search: searchValue?.toString(),\n      };\n      const response = await axios.get(\"http://localhost:8000/api/hcps/\", {\n        params: requestData,\n      });\n      const data = response.data.hcps;\n      setHcpData(data);\n    } catch (error) {\n      // TODO show message to user\n      // Send to Sentry etc\n      console.log(\"error\", error);\n    }\n  };\n\n  const handleSelectedTableRowChange = async (selectedRecord) => {\n    try {\n      const recordId = selectedRecord?.id;\n      // TODO abstract to api file\n      const response = await axios.get(\n        `http://localhost:8000/api/hcps/${recordId}`\n      );\n      const data = response?.data;\n      setSelectedTableRow(data);\n    } catch (error) {\n      // TODO show message to user\n      // Send to Sentry etc\n      console.log(\"error\", error);\n    }\n  };\n\n  const handleDrawerClose = () => {\n    setSelectedTableRow(null);\n  };\n\n  const handleSearchChange = (value) => {\n    fetchHcps(value);\n  };\n\n  return (\n    <Flex justify=\"center\">\n      <HcpTable\n        data={hcpData}\n        onSelectRow={handleSelectedTableRowChange}\n        onSearch={handleSearchChange}\n      />\n      {selectedTableRow && (\n        <HcpDetailDrawer\n          data={selectedTableRow}\n          onClose={handleDrawerClose}\n          open={selectedTableRow}\n        />\n      )}\n    </Flex>\n  );\n};\n\nexport default HcpPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAOC,WAAW,IAAK;IACvC,IAAI;MACF;MACA,MAAMC,WAAW,GAAG;QAClBC,MAAM,EAAEF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,QAAQ,CAAC;MAChC,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,iCAAiC,EAAE;QAClEC,MAAM,EAAEL;MACV,CAAC,CAAC;MACF,MAAMM,IAAI,GAAGH,QAAQ,CAACG,IAAI,CAACC,IAAI;MAC/BZ,UAAU,CAACW,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC7B;EACF,CAAC;EAED,MAAMG,4BAA4B,GAAG,MAAOC,cAAc,IAAK;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAGD,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEE,EAAE;MACnC;MACA,MAAMX,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC9B,kCAAkCS,QAAQ,EAC5C,CAAC;MACD,MAAMP,IAAI,GAAGH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI;MAC3BT,mBAAmB,CAACS,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC7B;EACF,CAAC;EAED,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9BlB,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMmB,kBAAkB,GAAIC,KAAK,IAAK;IACpCnB,SAAS,CAACmB,KAAK,CAAC;EAClB,CAAC;EAED,oBACE1B,OAAA,CAACJ,IAAI;IAAC+B,OAAO,EAAC,QAAQ;IAAAC,QAAA,gBACpB5B,OAAA,CAACH,QAAQ;MACPkB,IAAI,EAAEZ,OAAQ;MACd0B,WAAW,EAAET,4BAA6B;MAC1CU,QAAQ,EAAEL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACD7B,gBAAgB,iBACfL,OAAA,CAACF,eAAe;MACdiB,IAAI,EAAEV,gBAAiB;MACvB8B,OAAO,EAAEX,iBAAkB;MAC3BY,IAAI,EAAE/B;IAAiB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAChC,EAAA,CAlEID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AAoEb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}